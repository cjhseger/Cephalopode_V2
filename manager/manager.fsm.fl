// managerFSM (autogenerated by Stately)

cload "ste.fl";

ENUM "managerFSM_state"
    [ "FROZEN"
    , "MIDDLE"
    , "RUNNING"
    , "START"
    ];

let managerFSM =
    // clock
    bit_input clk.
    // inputs
    bit_input reset.
    bit_input req.
    bit_input freeze_req.
    bit_input unfreeze_req.
    bit_input re_ack.
    // outputs
    bit_output ack.
    bit_output freeze_ack.
    bit_output unfreeze_ack.
    bit_output re_req.
    bit_output pause.
    bit_output load_gp.
    bit_output store_gp.
    // internals
    // state
    managerFSM_state_internal state.
    CELL "draw_hier managerFSM"
        [ Moore_FSM "managerFSM_moore" clk state (reset, START)
              [ FROZEN --- unfreeze_req --- MIDDLE
              , MIDDLE --- freeze_req --- FROZEN
              , MIDDLE --- ('~' freeze_req) --- RUNNING
              , RUNNING --- re_ack --- MIDDLE
              , START --- req --- MIDDLE
              ]
        , re_req <- (is_RUNNING state)
        , pause <- ((is_RUNNING state) '&' freeze_req)
        , load_gp <- ((is_MIDDLE state) '&' ('~' freeze_req))
        , store_gp <- ((is_RUNNING state) '&' re_ack)
        , freeze_ack <- ((is_MIDDLE state) '&' freeze_req)
        , unfreeze_ack <- ((is_FROZEN state) '&' unfreeze_req)
        , ack <- '0
        ];


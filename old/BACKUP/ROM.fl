cload (DIR^"types.fl");

MEMORY "ROM" [(ROM_LINES, "rom_addr")] "node";

let behavioral_ROM name =
    rom_addr_input	addr.
    node_output		out.
    //
    bit_internal    rdy.
    internal	    local_out.
    let  rom =  mk_internal (sprintf "__ROM__%s__" name) in
    add_internal {rom::ROM} (
    CELL "behavioral_ROM" [
	is_stable ROM_LATENCY addr rdy,
	Read_ROM rom addr local_out,
	out <- (IF rdy THEN local_out ELSE 'X),
	rom <: rom
]);

BUNDLE "B_ROM_read" 
	[("req", "bit"), ("addr", "rom_addr")] 
	[("ack", "bit"), ("data", "node")]
;

let ROM =
    bit_input		clk.
    bit_input		reset.
    B_ROM_read_input	S_ROM_read.
    CELL "ROM" [
	behavioral_ROM "flash" (S_ROM_read-->addr) (S_ROM_read-->data),
	S_ROM_read-->ack <- S_ROM_read-->req
];

create_default_version ROM;

